#pragma once
#ifndef CUBEMAP_H
#define CUBEMAP_H

#include<vector> 
#include<string>

class Shader;

class Cubemap
{
	unsigned textureId = 0;
	unsigned VAO = 0, VBO = 0;
	Shader* shader = nullptr;

	inline const static float skyboxVertices[] = {
		// positions          
		-1000.0f,  1000.0f, -1000.0f,
		-1000.0f, -1000.0f, -1000.0f,
		 1000.0f, -1000.0f, -1000.0f,
		 1000.0f, -1000.0f, -1000.0f,
		 1000.0f,  1000.0f, -1000.0f,
		-1000.0f,  1000.0f, -1000.0f,
		  
		-1000.0f, -1000.0f,  1000.0f,
		-1000.0f, -1000.0f, -1000.0f,
		-1000.0f,  1000.0f, -1000.0f,
		-1000.0f,  1000.0f, -1000.0f,
		-1000.0f,  1000.0f,  1000.0f,
		-1000.0f, -1000.0f,  1000.0f,
		  
		 1000.0f, -1000.0f, -1000.0f,
		 1000.0f, -1000.0f,  1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		 1000.0f,  1000.0f, -1000.0f,
		 1000.0f, -1000.0f, -1000.0f,
		  
		-1000.0f, -1000.0f,  1000.0f,
		-1000.0f,  1000.0f,  1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		 1000.0f, -1000.0f,  1000.0f,
		-1000.0f, -1000.0f,  1000.0f,
		  
		-1000.0f,  1000.0f, -1000.0f,
		 1000.0f,  1000.0f, -1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		 1000.0f,  1000.0f,  1000.0f,
		-1000.0f,  1000.0f,  1000.0f,
		-1000.0f,  1000.0f, -1000.0f,
		  
		-1000.0f, -1000.0f, -1000.0f,
		-1000.0f, -1000.0f,  1000.0f,
		 1000.0f, -1000.0f, -1000.0f,
		 1000.0f, -1000.0f, -1000.0f,
		-1000.0f, -1000.0f,  1000.0f,
		 1000.0f, -1000.0f,  1000.0f
	};

public:
	Cubemap(const std::vector<std::string>& faces, Shader* shader);
	void Draw();
};

#endif